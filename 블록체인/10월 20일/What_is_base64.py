"""
####################
## Base64란
####################

 - 바이너리 데이터를 ASCII 문자열 형식으로 변환하는 인코딩 방식

 - 주로 텍스트 기반 시스템(예: 이메일, HTTP)을 통해 이진 데이터(예: 이미지, 파일)를 안전하게 전송하거나 포함하기 위해 사용

 - 암호화가 아님

   * Base64는 데이터를 숨기거나 보호하기 위한 암호화 방식이 아님
   * 단지 데이터를 전송 환경에 적합하게 변환하는 인코딩 방식일 뿐이며, 누구나 쉽게 디코딩하여 원본 데이터를 복원할 수 있음


#######################
## Base64의 특징 및 원리
#######################

 - 64개의 안전한 문자 집합 

      * Base64라는 이름은 인코딩에 사용되는 문자가 64개(대문자 A-Z, 소문자 a-z, 숫자 0-9, 그리고 '+'와 '/' 문자, 
        마지막으로 패딩 문자 '=')라는 데서 유래했음(이 문자들은 대부분의 시스템에서 특별한 의미 없이 안전하게 처리되는 문자들임)

 - 이진 데이터를 텍스트로 변환

      * 8비트씩 이루어진 원본 바이너리 데이터를 6비트씩 그룹으로 나누어 64개의 문자 중 하나로 매핑
      * 3바이트(24비트)의 원본 데이터는 4바이트(24비트)의 Base64 인코딩된 데이터로 변환되어, 데이터 크기가 약 33% 증가

 - 패딩 (Padding)
   
      * 원본 데이터의 길이가 3의 배수가 아닐 경우, 인코딩된 문자열의 길이를 4의 배수로 맞추기 위해 끝에 '=' 문자를 추가
        이는 디코딩 시 원본 데이터의 길이를 복원하는 데 도움을 줌

####################################
## 인코딩(Encoding)과  디코딩 (Decoding)
####################################

 - 문자열을 Base64로 인코딩하려면, 먼저 문자열을 바이트 객체로 변환해야 함(예: .encode('utf-8')).

 - Base64로 인코딩된 문자열을 원본 데이터로 되돌리려면, 먼저 인코딩된 문자열을 바이트 객체로 변환한 다음 
   디코딩하고, 최종적으로 원본 문자열로 변환함


###########################
## (1) 인코딩(Encoding)
###########################

"""

import base64

# 인코딩할 문자열
original_string = "안녕하세요, Base64 테스트입니다."

# 문자열을 바이트로 변환 (Base64는 바이트 데이터를 처리함)
bytes_data = original_string.encode('utf-8')

# Base64 인코딩
encoded_bytes = base64.b64encode(bytes_data)

# 인코딩된 바이트를 다시 문자열로 변환하여 출력
encoded_string = encoded_bytes.decode('utf-8')

print(f"원본 문자열: {original_string}")
print(f"Base64 인코딩된 문자열: {encoded_string}")
# 출력 예: 원본 문자열: 안녕하세요, Base64 테스트입니다.
# 출력 예: Base64 인코딩된 문자열: R21heSdzIElzdXN0IFRlc3Q==
print("==========================")


#############################
## (2) 디코딩 (Decoding)
#############################"""

import base64

# 디코딩할 Base64 인코딩된 문자열 (위의 예제에서 얻은 결과 사용)
base64_string = "7Jik7ZWc7Iqk7Yq4LCBCYXNlNjQg7Yag7Iqk7Yag7Jyo66as7JygLi4u"

# Base64 문자열을 바이트로 변환
encoded_bytes_to_decode = base64_string.encode('utf-8')

# Base64 디코딩
decoded_bytes = base64.b64decode(encoded_bytes_to_decode)

# 디코딩된 바이트를 원본 문자열로 변환 (원본 인코딩 방식 사용)
decoded_string = decoded_bytes.decode('utf-8')

print(f"Base64 문자열: {base64_string}")
print(f"디코딩된 원본 문자열: {decoded_string}")

